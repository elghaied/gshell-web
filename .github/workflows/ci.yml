name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Build and Lint
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017

    env:
      # Database
      DATABASE_URI: mongodb://localhost:27017/gshell-web-test

      # Server URLs (CI specific)
      PAYLOAD_PUBLIC_SERVER_URL: http://localhost:3000
      NEXT_PUBLIC_SERVER_URL: http://localhost:3000

      # Feature flags
      NEXT_PUBLIC_IS_LIVE: false

      # Secrets (pulled from GitHub Secrets)
      PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
      PAYLOAD_PUBLIC_DRAFT_SECRET: ${{ secrets.PAYLOAD_PUBLIC_DRAFT_SECRET }}
      NEXT_PRIVATE_DRAFT_SECRET: ${{ secrets.NEXT_PRIVATE_DRAFT_SECRET }}
      REVALIDATION_KEY: ${{ secrets.REVALIDATION_KEY }}
      NEXT_PRIVATE_REVALIDATION_KEY: ${{ secrets.NEXT_PRIVATE_REVALIDATION_KEY }}

      # Node options
      NODE_OPTIONS: --no-deprecation

    strategy:
      matrix:
        node-version: [20.9.0]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Payload types
        run: pnpm generate:types

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build
