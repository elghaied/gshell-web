services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL:-http://localhost:3000}
        - NEXT_PUBLIC_IS_LIVE=${NEXT_PUBLIC_IS_LIVE:-false}
        - DATABASE_URI=mongodb://mongodb:27017/gshell-web12
        - PAYLOAD_SECRET=${PAYLOAD_SECRET}
        - PAYLOAD_PUBLIC_SERVER_URL=${PAYLOAD_PUBLIC_SERVER_URL:-http://localhost:3000}
        - PAYLOAD_PUBLIC_DRAFT_SECRET=${PAYLOAD_PUBLIC_DRAFT_SECRET}
        - NEXT_PRIVATE_DRAFT_SECRET=${NEXT_PRIVATE_DRAFT_SECRET}
        - NEXT_PRIVATE_REVALIDATION_KEY=${NEXT_PRIVATE_REVALIDATION_KEY}
        - REVALIDATION_KEY=${REVALIDATION_KEY}
        - S3_ENDPOINT=http://minio:9000
        - S3_ACCESS_KEY_ID=${MINIO_ROOT_USER}
        - S3_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
        - S3_BUCKET=${S3_BUCKET:-media}
        - S3_REGION=us-east-1
      target: runner
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URI=mongodb://mongodb:27017/gshell-web12
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - PAYLOAD_PUBLIC_SERVER_URL=${PAYLOAD_PUBLIC_SERVER_URL:-http://localhost:3000}
      - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL:-http://localhost:3000}
      - NEXT_PUBLIC_IS_LIVE=${NEXT_PUBLIC_IS_LIVE:-false}
      - PAYLOAD_PUBLIC_DRAFT_SECRET=${PAYLOAD_PUBLIC_DRAFT_SECRET}
      - NEXT_PRIVATE_DRAFT_SECRET=${NEXT_PRIVATE_DRAFT_SECRET}
      - REVALIDATION_KEY=${REVALIDATION_KEY}
      - NEXT_PRIVATE_REVALIDATION_KEY=${NEXT_PRIVATE_REVALIDATION_KEY}
      - NODE_ENV=production
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - S3_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - S3_BUCKET=${S3_BUCKET:-media}
      - S3_REGION=us-east-1
      - S3_FORCE_PATH_STYLE=true
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - HOSTNAME=0.0.0.0
      - PORT=3000

    depends_on:
      - mongodb
      - minio
    restart: unless-stopped
    networks:
      - app-network

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network
    restart: unless-stopped

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio-data:/data
    command: server --console-address ":9001" /data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    entrypoint: >
      /bin/sh -c "
      sleep 10 &&
      /usr/bin/mc alias set myminio http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD} &&
      /usr/bin/mc mb myminio/$${S3_BUCKET:-media} --ignore-existing &&
      /usr/bin/mc anonymous set public myminio/$${S3_BUCKET:-media} &&
      exit 0
      "
    networks:
      - app-network

volumes:
  mongodb-data:
  minio-data:

networks:
  app-network:
    driver: bridge
